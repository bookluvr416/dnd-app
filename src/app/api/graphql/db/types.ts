import {
  Generated,
  Insertable,
  Selectable,
  Updateable,
} from 'kysely'

export interface Database {
  characters: CharactersTable
}

// This interface describes the `characters` table to Kysely. Table
// interfaces should only be used in the `Database` type above
// and never as a result type of a query!. See the `Character`,
// `NewCharacter` and `CharacterUpdate` types below.
export interface CharactersTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  id: Generated<number>
  name: string
  level: number
  race: string
  characterClass: string
}

// You should not use the table schema interfaces directly. Instead, you should
// use the `Selectable`, `Insertable` and `Updateable` wrappers. These wrappers
// make sure that the correct types are used in each operation.
//
// Most of the time you should trust the type inference and not use explicit
// types at all. These types can be useful when typing function arguments.
export type Character = Selectable<CharactersTable>
export type NewCharacter = Insertable<CharactersTable>
export type CharacterUpdate = Updateable<CharactersTable>
